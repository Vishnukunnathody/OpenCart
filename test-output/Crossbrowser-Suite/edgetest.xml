<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-FLAG05I" failures="0" tests="17" name="edgetest" time="1.175" errors="0" timestamp="2024-11-05T23:58:27 EST">
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.001">
    <failure type="java.lang.IllegalArgumentException" message="Invalid browser name specified in properties file">
      <![CDATA[java.lang.IllegalArgumentException: Invalid browser name specified in properties file
at utils.DriverType.getDriverType(DriverType.java:36)
at tests.BaseSteps.initialize(BaseSteps.java:53)
at tests.LoginTest.setUp(LoginTest.java:23)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="tests.BaseSteps" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithValidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithValidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithValidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithValidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithInvalidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithInvalidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithInvalidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginWithInvalidCredentials_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials_Test -->
  <testcase classname="tests.LoginTest" name="verifyForgotPasswordLink_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyForgotPasswordLink_Test -->
  <testcase classname="tests.LoginTest" name="verifyPlaceholdersOnLoginPage_Test" time="0.001">
    <skipped/>
  </testcase> <!-- verifyPlaceholdersOnLoginPage_Test -->
  <testcase classname="tests.LoginTest" name="verifyNavigationBackAfterSuccessfulLogin_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyNavigationBackAfterSuccessfulLogin_Test -->
  <testcase classname="tests.LoginTest" name="verifyNavigationBackAfterLogout_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyNavigationBackAfterLogout_Test -->
  <testcase classname="tests.LoginTest" name="verifyMaxLoginAttempts_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyMaxLoginAttempts_Test -->
  <testcase classname="tests.LoginTest" name="verifyPasswordFieldToggleToHide_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldToggleToHide_Test -->
  <testcase classname="tests.LoginTest" name="verifyPasswordCannotBeCopied_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPasswordCannotBeCopied_Test -->
  <testcase classname="tests.LoginTest" name="verifyPasswordNotVisibleInPageSource_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPasswordNotVisibleInPageSource_Test -->
  <testcase classname="tests.LoginTest" name="verifyLoginAfterChangingPassword_Test" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginAfterChangingPassword_Test -->
</testsuite> <!-- edgetest -->
