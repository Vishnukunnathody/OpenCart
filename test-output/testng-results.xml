<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="15" ignored="15" total="77" passed="33" failed="14" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-04T22:28:46 EST" name="Grouping-Suite" finished-at="2024-11-04T22:38:18 EST" duration-ms="571747">
    <groups>
      <group name="Master">
        <method signature="LoginTest.verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifylogoutFromMyAccountDropMenu_Test()[pri:1, instance:tests.LogoutTest@6bea52d4]" name="verifylogoutFromMyAccountDropMenu_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisterAccountUsingMandatoryFields_Test()[pri:1, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountUsingMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingInvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifyLogoutFromRightColumnOption_Test()[pri:2, instance:tests.LogoutTest@6bea52d4]" name="verifyLogoutFromRightColumnOption_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisterAccountUsingAllFields_Test()[pri:2, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountUsingAllFields_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterAccountWithoutanyDetails_Test()[pri:3, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountWithoutanyDetails_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterAccountYesSelectedForNewsletter_Test()[pri:4, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountYesSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterAccountNoSelectedForNewsletter_Test()[pri:5, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountNoSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyForgotPasswordLink_Test()[pri:6, instance:tests.LoginTest@bf1ec20]" name="verifyForgotPasswordLink_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyDiffWayNavigatingToRegisterAccount_Test()[pri:6, instance:tests.RegisterTest@3381b4fc]" name="verifyDiffWayNavigatingToRegisterAccount_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPlaceholdersOnLoginPage_Test()[pri:7, instance:tests.LoginTest@bf1ec20]" name="verifyPlaceholdersOnLoginPage_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithDifferentPassAndConfirmPass_Test()[pri:7, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigatingBackAfterSuccessfullLogin_Test()[pri:8, instance:tests.LoginTest@bf1ec20]" name="verifyNavigatingBackAfterSuccessfullLogin_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithExistingDetails_Test()[pri:8, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithExistingDetails_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigatingBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@bf1ec20]" name="verifyNavigatingBackAfterLogout_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyInvalidEmailTooltipMsg_Test()[pri:9, instance:tests.RegisterTest@3381b4fc]" name="verifyInvalidEmailTooltipMsg_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" name="verifyUserCannotuseInvalidPhoneNumber_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyMaxLoginAttempts_Test()[pri:11, instance:tests.LoginTest@bf1ec20]" name="verifyMaxLoginAttempts_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisterPagePlaceholders_Test()[pri:11, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterPagePlaceholders_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordFieldToggleToHide_Test()[pri:12, instance:tests.LoginTest@bf1ec20]" name="verifyPasswordFieldToggleToHide_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyAsterickSymbolForMandatoryFields_Test()[pri:12, instance:tests.RegisterTest@3381b4fc]" name="verifyAsterickSymbolForMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordCannotCopied_Test()[pri:13, instance:tests.LoginTest@bf1ec20]" name="verifyPasswordCannotCopied_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" name="verifyPassWordFieldFollowComplexityStandards_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordNotVisibleInPageSource_Test()[pri:14, instance:tests.LoginTest@bf1ec20]" name="verifyPasswordNotVisibleInPageSource_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyCheckboxNotCheckedByDefault_Test()[pri:14, instance:tests.RegisterTest@3381b4fc]" name="verifyCheckboxNotCheckedByDefault_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoggingAfterchangingPassword_Test()[pri:15, instance:tests.LoginTest@bf1ec20]" name="verifyLoggingAfterchangingPassword_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithNotSelectingPrivacyPolicy_Test()[pri:15, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithNotSelectingPrivacyPolicy_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyPasswordAndConfirmPasswordToggledToHide_Test()[pri:16, instance:tests.RegisterTest@3381b4fc]" name="verifyPasswordAndConfirmPasswordToggledToHide_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringWithNotEnteringPassConfirm_Test()[pri:17, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithNotEnteringPassConfirm_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyConfirmationEmailSendForSuccessfullRegistration_Test()[pri:18, instance:tests.RegisterTest@3381b4fc]" name="verifyConfirmationEmailSendForSuccessfullRegistration_Test" class="tests.RegisterTest"/>
      </group> <!-- Master -->
      <group name="test">
        <method signature="LoginTest.verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingvalidCredentials_Test" class="tests.LoginTest"/>
      </group> <!-- test -->
      <group name="DataDriven">
        <method signature="LoginTest.verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LoginTest.verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingInvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" name="verifyUserCannotuseInvalidPhoneNumber_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" name="verifyPassWordFieldFollowComplexityStandards_Test" class="tests.RegisterTest"/>
      </group> <!-- DataDriven -->
      <group name="Regression">
        <method signature="LoginTest.verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifylogoutFromMyAccountDropMenu_Test()[pri:1, instance:tests.LogoutTest@6bea52d4]" name="verifylogoutFromMyAccountDropMenu_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisterAccountUsingMandatoryFields_Test()[pri:1, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountUsingMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" name="verifyLoginToApplicationUsingInvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifyLogoutFromRightColumnOption_Test()[pri:2, instance:tests.LogoutTest@6bea52d4]" name="verifyLogoutFromRightColumnOption_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisterAccountUsingAllFields_Test()[pri:2, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountUsingAllFields_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterAccountWithoutanyDetails_Test()[pri:3, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountWithoutanyDetails_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterAccountYesSelectedForNewsletter_Test()[pri:4, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountYesSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisterAccountNoSelectedForNewsletter_Test()[pri:5, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterAccountNoSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyForgotPasswordLink_Test()[pri:6, instance:tests.LoginTest@bf1ec20]" name="verifyForgotPasswordLink_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyDiffWayNavigatingToRegisterAccount_Test()[pri:6, instance:tests.RegisterTest@3381b4fc]" name="verifyDiffWayNavigatingToRegisterAccount_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPlaceholdersOnLoginPage_Test()[pri:7, instance:tests.LoginTest@bf1ec20]" name="verifyPlaceholdersOnLoginPage_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithDifferentPassAndConfirmPass_Test()[pri:7, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigatingBackAfterSuccessfullLogin_Test()[pri:8, instance:tests.LoginTest@bf1ec20]" name="verifyNavigatingBackAfterSuccessfullLogin_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithExistingDetails_Test()[pri:8, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithExistingDetails_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigatingBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@bf1ec20]" name="verifyNavigatingBackAfterLogout_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyInvalidEmailTooltipMsg_Test()[pri:9, instance:tests.RegisterTest@3381b4fc]" name="verifyInvalidEmailTooltipMsg_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" name="verifyUserCannotuseInvalidPhoneNumber_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyMaxLoginAttempts_Test()[pri:11, instance:tests.LoginTest@bf1ec20]" name="verifyMaxLoginAttempts_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisterPagePlaceholders_Test()[pri:11, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisterPagePlaceholders_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordFieldToggleToHide_Test()[pri:12, instance:tests.LoginTest@bf1ec20]" name="verifyPasswordFieldToggleToHide_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyAsterickSymbolForMandatoryFields_Test()[pri:12, instance:tests.RegisterTest@3381b4fc]" name="verifyAsterickSymbolForMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordCannotCopied_Test()[pri:13, instance:tests.LoginTest@bf1ec20]" name="verifyPasswordCannotCopied_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" name="verifyPassWordFieldFollowComplexityStandards_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordNotVisibleInPageSource_Test()[pri:14, instance:tests.LoginTest@bf1ec20]" name="verifyPasswordNotVisibleInPageSource_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyCheckboxNotCheckedByDefault_Test()[pri:14, instance:tests.RegisterTest@3381b4fc]" name="verifyCheckboxNotCheckedByDefault_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoggingAfterchangingPassword_Test()[pri:15, instance:tests.LoginTest@bf1ec20]" name="verifyLoggingAfterchangingPassword_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithNotSelectingPrivacyPolicy_Test()[pri:15, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithNotSelectingPrivacyPolicy_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyPasswordAndConfirmPasswordToggledToHide_Test()[pri:16, instance:tests.RegisterTest@3381b4fc]" name="verifyPasswordAndConfirmPasswordToggledToHide_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringWithNotEnteringPassConfirm_Test()[pri:17, instance:tests.RegisterTest@3381b4fc]" name="verifyRegisteringWithNotEnteringPassConfirm_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyConfirmationEmailSendForSuccessfullRegistration_Test()[pri:18, instance:tests.RegisterTest@3381b4fc]" name="verifyConfirmationEmailSendForSuccessfullRegistration_Test" class="tests.RegisterTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-11-04T22:28:46 EST" name="Test" finished-at="2024-11-04T22:38:18 EST" duration-ms="571747">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:28:48 EST" name="SetUp" finished-at="2024-11-04T22:28:56 EST" duration-ms="8056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:28:56 EST" name="verifyLoginToApplicationUsingvalidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-04T22:28:58 EST" duration-ms="1794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Admin Login, Username=vishnu.71881@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:28:58 EST" name="tearDown" finished-at="2024-11-04T22:28:58 EST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:28:58 EST" name="SetUp" finished-at="2024-11-04T22:29:03 EST" duration-ms="5594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:03 EST" name="verifyLoginToApplicationUsingvalidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-04T22:29:06 EST" duration-ms="2334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Supervisor Login, Username=vishnu.71882@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:06 EST" name="tearDown" finished-at="2024-11-04T22:29:06 EST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:06 EST" name="SetUp" finished-at="2024-11-04T22:29:11 EST" duration-ms="5470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:11 EST" name="verifyLoginToApplicationUsingvalidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-04T22:29:14 EST" duration-ms="2724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Team Member Login, Username=vishnu.71883@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:14 EST" name="tearDown" finished-at="2024-11-04T22:29:14 EST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:14 EST" name="SetUp" finished-at="2024-11-04T22:29:19 EST" duration-ms="5296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingvalidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:19 EST" name="verifyLoginToApplicationUsingvalidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-04T22:29:21 EST" duration-ms="1589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Trainee Login, Username=vishnu.71884@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:21 EST" name="tearDown" finished-at="2024-11-04T22:29:21 EST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:21 EST" name="SetUp" finished-at="2024-11-04T22:29:27 EST" duration-ms="5431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:27 EST" name="verifyLoginToApplicationUsingInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-04T22:29:28 EST" duration-ms="1058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Both Email &Pass In-Valid , Username=vishnu.1123@gmail, Expected Result=Success, Password=Vish}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:28 EST" name="tearDown" finished-at="2024-11-04T22:29:28 EST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:28 EST" name="SetUp" finished-at="2024-11-04T22:29:34 EST" duration-ms="5706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:34 EST" name="verifyLoginToApplicationUsingInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-04T22:29:35 EST" duration-ms="1629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=InvalidEmail & ValidPass, Username=vishnu.1123@gmail, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:35 EST" name="tearDown" finished-at="2024-11-04T22:29:35 EST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:35 EST" name="SetUp" finished-at="2024-11-04T22:29:41 EST" duration-ms="5591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:41 EST" name="verifyLoginToApplicationUsingInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-04T22:29:43 EST" duration-ms="1633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=ValidEmail & InvalidPass, Username=vishnu.71883@gmail.com, Expected Result=Success, Password=Vishnu12}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:43 EST" name="tearDown" finished-at="2024-11-04T22:29:43 EST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:43 EST" name="SetUp" finished-at="2024-11-04T22:29:48 EST" duration-ms="5509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoginToApplicationUsingInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:48 EST" name="verifyLoginToApplicationUsingInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-04T22:29:49 EST" duration-ms="1031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=NoCredentilals, Username= , Expected Result=Success, Password= }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginToApplicationUsingInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:49 EST" name="tearDown" finished-at="2024-11-04T22:29:49 EST" duration-ms="107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:49 EST" name="SetUp" finished-at="2024-11-04T22:29:55 EST" duration-ms="5558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyForgotPasswordLink_Test()[pri:6, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:55 EST" name="verifyForgotPasswordLink_Test" finished-at="2024-11-04T22:29:55 EST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordLink_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:55 EST" name="tearDown" finished-at="2024-11-04T22:29:56 EST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:29:56 EST" name="SetUp" finished-at="2024-11-04T22:30:03 EST" duration-ms="6947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPlaceholdersOnLoginPage_Test()[pri:7, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:03 EST" name="verifyPlaceholdersOnLoginPage_Test" finished-at="2024-11-04T22:30:03 EST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPlaceholdersOnLoginPage_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:03 EST" name="tearDown" finished-at="2024-11-04T22:30:03 EST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:03 EST" name="SetUp" finished-at="2024-11-04T22:30:09 EST" duration-ms="5934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyNavigatingBackAfterSuccessfullLogin_Test()[pri:8, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:09 EST" name="verifyNavigatingBackAfterSuccessfullLogin_Test" finished-at="2024-11-04T22:30:22 EST" duration-ms="13570" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3f7032f4d1a1df9232437f384a1d9f15, findElement {using=xpath, value=(//a[text()='Logout'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61168}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61168/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3f7032f4d1a1df9232437f384a1d9f15]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3f7032f4d1a1df9232437f384a1d9f15, findElement {using=xpath, value=(//a[text()='Logout'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61168}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61168/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3f7032f4d1a1df9232437f384a1d9f15
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$J1gFR7hs.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy50.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigatingBackAfterSuccessfullLogin_Test(LoginTest.java:67)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigatingBackAfterSuccessfullLogin_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:22 EST" name="tearDown" finished-at="2024-11-04T22:30:22 EST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:22 EST" name="SetUp" finished-at="2024-11-04T22:30:28 EST" duration-ms="5521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyNavigatingBackAfterSuccessfullLogin_Test()[pri:8, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:28 EST" name="verifyNavigatingBackAfterSuccessfullLogin_Test" finished-at="2024-11-04T22:30:40 EST" duration-ms="12270" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2feadb3818bb75868f3d6cb24be51ecf, findElement {using=xpath, value=(//a[text()='Logout'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61193}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61193/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2feadb3818bb75868f3d6cb24be51ecf]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2feadb3818bb75868f3d6cb24be51ecf, findElement {using=xpath, value=(//a[text()='Logout'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61193}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61193/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2feadb3818bb75868f3d6cb24be51ecf
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$7ziHmjhx.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy50.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigatingBackAfterSuccessfullLogin_Test(LoginTest.java:67)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigatingBackAfterSuccessfullLogin_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:40 EST" name="tearDown" finished-at="2024-11-04T22:30:41 EST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:41 EST" name="SetUp" finished-at="2024-11-04T22:30:46 EST" duration-ms="5252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyNavigatingBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:46 EST" name="verifyNavigatingBackAfterLogout_Test" finished-at="2024-11-04T22:30:58 EST" duration-ms="12459" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [53d7f766db57a6618500068e9810cc0e, findElement {using=xpath, value=(//a[text()='Login'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61216}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61216/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 53d7f766db57a6618500068e9810cc0e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [53d7f766db57a6618500068e9810cc0e, findElement {using=xpath, value=(//a[text()='Login'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61216}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61216/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 53d7f766db57a6618500068e9810cc0e
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$cIenZ1de.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy50.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigatingBackAfterLogout_Test(LoginTest.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigatingBackAfterLogout_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:58 EST" name="tearDown" finished-at="2024-11-04T22:30:59 EST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:30:59 EST" name="SetUp" finished-at="2024-11-04T22:31:05 EST" duration-ms="5508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyNavigatingBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:05 EST" name="verifyNavigatingBackAfterLogout_Test" finished-at="2024-11-04T22:31:18 EST" duration-ms="13224" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8f1e7a1b637c35c6109dd742ba746131, findElement {using=xpath, value=(//a[text()='Login'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61238}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61238/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8f1e7a1b637c35c6109dd742ba746131]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8f1e7a1b637c35c6109dd742ba746131, findElement {using=xpath, value=(//a[text()='Login'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61238}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61238/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8f1e7a1b637c35c6109dd742ba746131
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$1PjZU2p8.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy50.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigatingBackAfterLogout_Test(LoginTest.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigatingBackAfterLogout_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:18 EST" name="tearDown" finished-at="2024-11-04T22:31:18 EST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:18 EST" name="SetUp" finished-at="2024-11-04T22:31:23 EST" duration-ms="5102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyMaxLoginAttempts_Test()[pri:11, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:23 EST" name="verifyMaxLoginAttempts_Test" finished-at="2024-11-04T22:31:28 EST" duration-ms="4438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMaxLoginAttempts_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:28 EST" name="tearDown" finished-at="2024-11-04T22:31:28 EST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:28 EST" name="SetUp" finished-at="2024-11-04T22:31:33 EST" duration-ms="5383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPasswordFieldToggleToHide_Test()[pri:12, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:33 EST" name="verifyPasswordFieldToggleToHide_Test" finished-at="2024-11-04T22:31:33 EST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldToggleToHide_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:33 EST" name="tearDown" finished-at="2024-11-04T22:31:34 EST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:34 EST" name="SetUp" finished-at="2024-11-04T22:31:39 EST" duration-ms="5541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPasswordCannotCopied_Test()[pri:13, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:39 EST" name="verifyPasswordCannotCopied_Test" finished-at="2024-11-04T22:31:40 EST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordCannotCopied_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:40 EST" name="tearDown" finished-at="2024-11-04T22:31:40 EST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:40 EST" name="SetUp" finished-at="2024-11-04T22:31:46 EST" duration-ms="5658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPasswordNotVisibleInPageSource_Test()[pri:14, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:46 EST" name="verifyPasswordNotVisibleInPageSource_Test" finished-at="2024-11-04T22:31:46 EST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordNotVisibleInPageSource_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:46 EST" name="tearDown" finished-at="2024-11-04T22:31:46 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:46 EST" name="SetUp" finished-at="2024-11-04T22:31:52 EST" duration-ms="5624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyLoggingAfterchangingPassword_Test()[pri:15, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:31:52 EST" name="verifyLoggingAfterchangingPassword_Test" finished-at="2024-11-04T22:32:07 EST" duration-ms="15470" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 5.000
  (Session info: chrome=130.0.6723.92)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4fe07c61d38f11b00fff9ebbbdf34def, actions {actions=[org.openqa.selenium.interactions.Sequence@2e6f1f48]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61344}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61344/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4fe07c61d38f11b00fff9ebbbdf34def]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 5.000
  (Session info: chrome=130.0.6723.92)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4fe07c61d38f11b00fff9ebbbdf34def, actions {actions=[org.openqa.selenium.interactions.Sequence@2e6f1f48]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.91 (53ac07678369..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61344}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61344/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4fe07c61d38f11b00fff9ebbbdf34def
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:631)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$t6wKlBo0.perform(Unknown Source)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:613)
at base.BasePage.clickElement(BasePage.java:92)
at pagesobjects.AccountLogoutPage.clickOnLoginBtn(AccountLogoutPage.java:34)
at tests.LoginTest.verifyLoggingAfterchangingPassword_Test(LoginTest.java:113)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingAfterchangingPassword_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:32:07 EST" name="tearDown" finished-at="2024-11-04T22:32:07 EST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:32:07 EST" name="SetUp" finished-at="2024-11-04T22:32:12 EST" duration-ms="5231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLoggingAfterchangingPassword_Test()[pri:15, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:32:12 EST" name="verifyLoggingAfterchangingPassword_Test" finished-at="2024-11-04T22:32:25 EST" duration-ms="12688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingAfterchangingPassword_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@bf1ec20]" started-at="2024-11-04T22:32:25 EST" name="tearDown" finished-at="2024-11-04T22:32:25 EST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:25 EST" name="SetUp" finished-at="2024-11-04T22:32:31 EST" duration-ms="5632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisterAccountUsingMandatoryFields_Test()[pri:1, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:31 EST" name="verifyRegisterAccountUsingMandatoryFields_Test" finished-at="2024-11-04T22:32:33 EST" duration-ms="2577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountUsingMandatoryFields_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:33 EST" name="tearDown" finished-at="2024-11-04T22:32:34 EST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:34 EST" name="SetUp" finished-at="2024-11-04T22:32:40 EST" duration-ms="6151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisterAccountUsingAllFields_Test()[pri:2, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:40 EST" name="verifyRegisterAccountUsingAllFields_Test" finished-at="2024-11-04T22:32:43 EST" duration-ms="2813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountUsingAllFields_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:43 EST" name="tearDown" finished-at="2024-11-04T22:32:43 EST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:43 EST" name="SetUp" finished-at="2024-11-04T22:32:48 EST" duration-ms="5812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisterAccountWithoutanyDetails_Test()[pri:3, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:48 EST" name="verifyRegisterAccountWithoutanyDetails_Test" finished-at="2024-11-04T22:32:50 EST" duration-ms="1764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountWithoutanyDetails_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:50 EST" name="tearDown" finished-at="2024-11-04T22:32:50 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:50 EST" name="SetUp" finished-at="2024-11-04T22:32:56 EST" duration-ms="5688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisterAccountYesSelectedForNewsletter_Test()[pri:4, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:56 EST" name="verifyRegisterAccountYesSelectedForNewsletter_Test" finished-at="2024-11-04T22:32:59 EST" duration-ms="2717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountYesSelectedForNewsletter_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:59 EST" name="tearDown" finished-at="2024-11-04T22:32:59 EST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:32:59 EST" name="SetUp" finished-at="2024-11-04T22:33:05 EST" duration-ms="5647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisterAccountNoSelectedForNewsletter_Test()[pri:5, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:05 EST" name="verifyRegisterAccountNoSelectedForNewsletter_Test" finished-at="2024-11-04T22:33:08 EST" duration-ms="3231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterAccountNoSelectedForNewsletter_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:08 EST" name="tearDown" finished-at="2024-11-04T22:33:08 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:08 EST" name="SetUp" finished-at="2024-11-04T22:33:14 EST" duration-ms="5914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyDiffWayNavigatingToRegisterAccount_Test()[pri:6, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:14 EST" name="verifyDiffWayNavigatingToRegisterAccount_Test" finished-at="2024-11-04T22:33:17 EST" duration-ms="2752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiffWayNavigatingToRegisterAccount_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:17 EST" name="tearDown" finished-at="2024-11-04T22:33:17 EST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:17 EST" name="SetUp" finished-at="2024-11-04T22:33:22 EST" duration-ms="5581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisteringWithDifferentPassAndConfirmPass_Test()[pri:7, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:22 EST" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" finished-at="2024-11-04T22:33:25 EST" duration-ms="2267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringWithDifferentPassAndConfirmPass_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:25 EST" name="tearDown" finished-at="2024-11-04T22:33:25 EST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:25 EST" name="SetUp" finished-at="2024-11-04T22:33:30 EST" duration-ms="5758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisteringWithExistingDetails_Test()[pri:8, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:30 EST" name="verifyRegisteringWithExistingDetails_Test" finished-at="2024-11-04T22:33:33 EST" duration-ms="2170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringWithExistingDetails_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:33 EST" name="tearDown" finished-at="2024-11-04T22:33:33 EST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:33 EST" name="SetUp" finished-at="2024-11-04T22:33:39 EST" duration-ms="5772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyInvalidEmailTooltipMsg_Test()[pri:9, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:39 EST" name="verifyInvalidEmailTooltipMsg_Test" finished-at="2024-11-04T22:33:43 EST" duration-ms="4682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmailTooltipMsg_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:43 EST" name="tearDown" finished-at="2024-11-04T22:33:43 EST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:44 EST" name="SetUp" finished-at="2024-11-04T22:33:49 EST" duration-ms="5727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:49 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:33:53 EST" duration-ms="3327" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Nine Digits, Telephone=1.23456789E8, FirstName=Abhi, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Abhi, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:53 EST" name="tearDown" finished-at="2024-11-04T22:33:53 EST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:53 EST" name="SetUp" finished-at="2024-11-04T22:33:58 EST" duration-ms="5635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:33:58 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:01 EST" duration-ms="2519" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Nine Digits, Telephone=1.23456789E8, FirstName=Abhi, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Abhi, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:01 EST" name="tearDown" finished-at="2024-11-04T22:34:01 EST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:01 EST" name="SetUp" finished-at="2024-11-04T22:34:07 EST" duration-ms="5681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:07 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:10 EST" duration-ms="2882" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Eleven Digits, Telephone=1.2345678901E10, FirstName=Trevor, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Tre, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:10 EST" name="tearDown" finished-at="2024-11-04T22:34:10 EST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:10 EST" name="SetUp" finished-at="2024-11-04T22:34:16 EST" duration-ms="5880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:16 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:18 EST" duration-ms="2594" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Eleven Digits, Telephone=1.2345678901E10, FirstName=Trevor, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Tre, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:18 EST" name="tearDown" finished-at="2024-11-04T22:34:19 EST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:19 EST" name="SetUp" finished-at="2024-11-04T22:34:24 EST" duration-ms="5688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:24 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:27 EST" duration-ms="2529" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered :: Non Numeric, Telephone=abcdefghij, FirstName=Pawan, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Paw, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:27 EST" name="tearDown" finished-at="2024-11-04T22:34:27 EST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:27 EST" name="SetUp" finished-at="2024-11-04T22:34:33 EST" duration-ms="5711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:33 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:35 EST" duration-ms="2494" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered :: Non Numeric, Telephone=abcdefghij, FirstName=Pawan, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Paw, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:35 EST" name="tearDown" finished-at="2024-11-04T22:34:35 EST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:35 EST" name="SetUp" finished-at="2024-11-04T22:34:41 EST" duration-ms="5825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:41 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:44 EST" duration-ms="2540" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::   All Special Characters, Telephone=!@#$%^&*(), FirstName=Rahul, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Rah, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:44 EST" name="tearDown" finished-at="2024-11-04T22:34:44 EST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:44 EST" name="SetUp" finished-at="2024-11-04T22:34:49 EST" duration-ms="5667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:49 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:34:52 EST" duration-ms="2470" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::   All Special Characters, Telephone=!@#$%^&*(), FirstName=Rahul, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Rah, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:52 EST" name="tearDown" finished-at="2024-11-04T22:34:52 EST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:52 EST" name="SetUp" finished-at="2024-11-04T22:34:58 EST" duration-ms="5762" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:34:58 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:35:02 EST" duration-ms="3760" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description= Phone Text Entered :: With Spaces, Telephone=1234 67 90, FirstName=Cohen, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Coh, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:02 EST" name="tearDown" finished-at="2024-11-04T22:35:02 EST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:02 EST" name="SetUp" finished-at="2024-11-04T22:35:08 EST" duration-ms="5713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyUserCannotuseInvalidPhoneNumber_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:08 EST" name="verifyUserCannotuseInvalidPhoneNumber_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-04T22:35:10 EST" duration-ms="2599" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description= Phone Text Entered :: With Spaces, Telephone=1234 67 90, FirstName=Cohen, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Coh, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotuseInvalidPhoneNumber_Test(RegisterTest.java:127)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotuseInvalidPhoneNumber_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:10 EST" name="tearDown" finished-at="2024-11-04T22:35:10 EST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:10 EST" name="SetUp" finished-at="2024-11-04T22:35:16 EST" duration-ms="5710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisterPagePlaceholders_Test()[pri:11, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:16 EST" name="verifyRegisterPagePlaceholders_Test" finished-at="2024-11-04T22:35:16 EST" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterPagePlaceholders_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:16 EST" name="tearDown" finished-at="2024-11-04T22:35:17 EST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:17 EST" name="SetUp" finished-at="2024-11-04T22:35:22 EST" duration-ms="5859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyAsterickSymbolForMandatoryFields_Test()[pri:12, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:22 EST" name="verifyAsterickSymbolForMandatoryFields_Test" finished-at="2024-11-04T22:35:23 EST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAsterickSymbolForMandatoryFields_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:23 EST" name="tearDown" finished-at="2024-11-04T22:35:23 EST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:23 EST" name="SetUp" finished-at="2024-11-04T22:35:29 EST" duration-ms="5897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:29 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:35:31 EST" duration-ms="2470" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Uppercase, Telephone=1.23456789E9, FirstName=Abhi, PasswordConfirm=password123!, Runmode=Y, LastName=Abhi, Password=password123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:31 EST" name="tearDown" finished-at="2024-11-04T22:35:32 EST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:32 EST" name="SetUp" finished-at="2024-11-04T22:35:37 EST" duration-ms="5767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:37 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:35:40 EST" duration-ms="2465" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Uppercase, Telephone=1.23456789E9, FirstName=Abhi, PasswordConfirm=password123!, Runmode=Y, LastName=Abhi, Password=password123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:40 EST" name="tearDown" finished-at="2024-11-04T22:35:40 EST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:40 EST" name="SetUp" finished-at="2024-11-04T22:35:46 EST" duration-ms="5729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:46 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:35:48 EST" duration-ms="2486" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Lowercase, Telephone=1.23456789E9, FirstName=Trevor, PasswordConfirm=PASSWORD123!, Runmode=Y, LastName=Tre, Password=PASSWORD123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:48 EST" name="tearDown" finished-at="2024-11-04T22:35:48 EST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:48 EST" name="SetUp" finished-at="2024-11-04T22:35:54 EST" duration-ms="5805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:54 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:35:57 EST" duration-ms="2559" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Lowercase, Telephone=1.23456789E9, FirstName=Trevor, PasswordConfirm=PASSWORD123!, Runmode=Y, LastName=Tre, Password=PASSWORD123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:57 EST" name="tearDown" finished-at="2024-11-04T22:35:57 EST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:35:57 EST" name="SetUp" finished-at="2024-11-04T22:36:03 EST" duration-ms="5742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:03 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:05 EST" duration-ms="2617" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Numbers, Telephone=1.23456789E9, FirstName=Pawan, PasswordConfirm=1.23456789E9, Runmode=Y, LastName=Paw, Password=1.23456789E9}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:05 EST" name="tearDown" finished-at="2024-11-04T22:36:06 EST" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:06 EST" name="SetUp" finished-at="2024-11-04T22:36:11 EST" duration-ms="5901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:11 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:14 EST" duration-ms="2519" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Numbers, Telephone=1.23456789E9, FirstName=Pawan, PasswordConfirm=1.23456789E9, Runmode=Y, LastName=Paw, Password=1.23456789E9}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:14 EST" name="tearDown" finished-at="2024-11-04T22:36:14 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:14 EST" name="SetUp" finished-at="2024-11-04T22:36:20 EST" duration-ms="6039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:20 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:23 EST" duration-ms="2440" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Numbers, Telephone=1.23456789E9, FirstName=Rahul, PasswordConfirm=Password!, Runmode=Y, LastName=Rah, Password=Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:23 EST" name="tearDown" finished-at="2024-11-04T22:36:23 EST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:23 EST" name="SetUp" finished-at="2024-11-04T22:36:28 EST" duration-ms="5472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:28 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:32 EST" duration-ms="4146" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Numbers, Telephone=1.23456789E9, FirstName=Rahul, PasswordConfirm=Password!, Runmode=Y, LastName=Rah, Password=Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:33 EST" name="tearDown" finished-at="2024-11-04T22:36:33 EST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:33 EST" name="SetUp" finished-at="2024-11-04T22:36:38 EST" duration-ms="5420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:38 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:41 EST" duration-ms="3185" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Special Characters, Telephone=1.23456789E9, FirstName=Shyam, PasswordConfirm=^$^*^$*^*$, Runmode=Y, LastName=Shy, Password=^$^*^$*^*$}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:41 EST" name="tearDown" finished-at="2024-11-04T22:36:41 EST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:41 EST" name="SetUp" finished-at="2024-11-04T22:36:47 EST" duration-ms="6000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:47 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:50 EST" duration-ms="2510" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Special Characters, Telephone=1.23456789E9, FirstName=Shyam, PasswordConfirm=^$^*^$*^*$, Runmode=Y, LastName=Shy, Password=^$^*^$*^*$}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:50 EST" name="tearDown" finished-at="2024-11-04T22:36:50 EST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:50 EST" name="SetUp" finished-at="2024-11-04T22:36:56 EST" duration-ms="5742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:56 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:36:59 EST" duration-ms="3141" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Special Characters, Telephone=1.23456789E9, FirstName=Cohen, PasswordConfirm=Password123, Runmode=Y, LastName=Coh, Password=Password123}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:59 EST" name="tearDown" finished-at="2024-11-04T22:36:59 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:36:59 EST" name="SetUp" finished-at="2024-11-04T22:37:05 EST" duration-ms="5761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:05 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:37:07 EST" duration-ms="2461" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Special Characters, Telephone=1.23456789E9, FirstName=Cohen, PasswordConfirm=Password123, Runmode=Y, LastName=Coh, Password=Password123}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:07 EST" name="tearDown" finished-at="2024-11-04T22:37:08 EST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:08 EST" name="SetUp" finished-at="2024-11-04T22:37:13 EST" duration-ms="5857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method retried="true" signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:13 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:37:16 EST" duration-ms="2533" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  With Spaces, Telephone=1.23456789E9, FirstName=Lawren, PasswordConfirm=Pass word 123!, Runmode=Y, LastName=Law, Password=Pass word 123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:16 EST" name="tearDown" finished-at="2024-11-04T22:37:16 EST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:16 EST" name="SetUp" finished-at="2024-11-04T22:37:22 EST" duration-ms="5779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPassWordFieldFollowComplexityStandards_Test(java.util.HashMap)[pri:13, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:22 EST" name="verifyPassWordFieldFollowComplexityStandards_Test" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-04T22:37:24 EST" duration-ms="2539" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  With Spaces, Telephone=1.23456789E9, FirstName=Lawren, PasswordConfirm=Pass word 123!, Runmode=Y, LastName=Law, Password=Pass word 123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPassWordFieldFollowComplexityStandards_Test(RegisterTest.java:167)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPassWordFieldFollowComplexityStandards_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:25 EST" name="tearDown" finished-at="2024-11-04T22:37:25 EST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:25 EST" name="SetUp" finished-at="2024-11-04T22:37:31 EST" duration-ms="5897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyCheckboxNotCheckedByDefault_Test()[pri:14, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:31 EST" name="verifyCheckboxNotCheckedByDefault_Test" finished-at="2024-11-04T22:37:31 EST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckboxNotCheckedByDefault_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:31 EST" name="tearDown" finished-at="2024-11-04T22:37:31 EST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:31 EST" name="SetUp" finished-at="2024-11-04T22:37:37 EST" duration-ms="5942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisteringWithNotSelectingPrivacyPolicy_Test()[pri:15, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:37 EST" name="verifyRegisteringWithNotSelectingPrivacyPolicy_Test" finished-at="2024-11-04T22:37:39 EST" duration-ms="2097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringWithNotSelectingPrivacyPolicy_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:39 EST" name="tearDown" finished-at="2024-11-04T22:37:39 EST" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:39 EST" name="SetUp" finished-at="2024-11-04T22:37:45 EST" duration-ms="5751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyPasswordAndConfirmPasswordToggledToHide_Test()[pri:16, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:45 EST" name="verifyPasswordAndConfirmPasswordToggledToHide_Test" finished-at="2024-11-04T22:37:45 EST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordAndConfirmPasswordToggledToHide_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:45 EST" name="tearDown" finished-at="2024-11-04T22:37:45 EST" duration-ms="136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:45 EST" name="SetUp" finished-at="2024-11-04T22:37:51 EST" duration-ms="5933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyRegisteringWithNotEnteringPassConfirm_Test()[pri:17, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:51 EST" name="verifyRegisteringWithNotEnteringPassConfirm_Test" finished-at="2024-11-04T22:37:53 EST" duration-ms="2221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringWithNotEnteringPassConfirm_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:53 EST" name="tearDown" finished-at="2024-11-04T22:37:53 EST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:53 EST" name="SetUp" finished-at="2024-11-04T22:37:59 EST" duration-ms="5891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyConfirmationEmailSendForSuccessfullRegistration_Test()[pri:18, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:37:59 EST" name="verifyConfirmationEmailSendForSuccessfullRegistration_Test" finished-at="2024-11-04T22:38:02 EST" duration-ms="2673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyConfirmationEmailSendForSuccessfullRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@3381b4fc]" started-at="2024-11-04T22:38:02 EST" name="tearDown" finished-at="2024-11-04T22:38:02 EST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterTest -->
      <class name="tests.LogoutTest">
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LogoutTest@6bea52d4]" started-at="2024-11-04T22:38:02 EST" name="SetUp" finished-at="2024-11-04T22:38:08 EST" duration-ms="5435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifylogoutFromMyAccountDropMenu_Test()[pri:1, instance:tests.LogoutTest@6bea52d4]" started-at="2024-11-04T22:38:08 EST" name="verifylogoutFromMyAccountDropMenu_Test" finished-at="2024-11-04T22:38:10 EST" duration-ms="2570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifylogoutFromMyAccountDropMenu_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogoutTest@6bea52d4]" started-at="2024-11-04T22:38:10 EST" name="tearDown" finished-at="2024-11-04T22:38:10 EST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="SetUp()[pri:0, instance:tests.LogoutTest@6bea52d4]" started-at="2024-11-04T22:38:10 EST" name="SetUp" finished-at="2024-11-04T22:38:16 EST" duration-ms="5451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="verifyLogoutFromRightColumnOption_Test()[pri:2, instance:tests.LogoutTest@6bea52d4]" started-at="2024-11-04T22:38:16 EST" name="verifyLogoutFromRightColumnOption_Test" finished-at="2024-11-04T22:38:18 EST" duration-ms="2417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFromRightColumnOption_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogoutTest@6bea52d4]" started-at="2024-11-04T22:38:18 EST" name="tearDown" finished-at="2024-11-04T22:38:18 EST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LogoutTest -->
    </test> <!-- Test -->
  </suite> <!-- Grouping-Suite -->
</testng-results>
