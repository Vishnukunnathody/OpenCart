<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="15" ignored="15" total="77" passed="32" failed="15" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-06T00:54:46 EST" name="Grouping-Suite" finished-at="2024-11-06T01:04:06 EST" duration-ms="559898">
    <groups>
      <group name="Master">
        <method signature="LoginTest.verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithValidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifyLogoutFromMainMenuDropdown_Test()[pri:1, instance:tests.LogoutTest@5b1f29fa]" name="verifyLogoutFromMainMenuDropdown_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountUsingMandatoryFields_Test()[pri:1, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountUsingMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithInvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifyLogoutFromRightColumnOption_Test()[pri:2, instance:tests.LogoutTest@5b1f29fa]" name="verifyLogoutFromRightColumnOption_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountUsingNonMandatoryFields_Test()[pri:2, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountUsingNonMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountWithoutAnyDetails_Test()[pri:3, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountWithoutAnyDetails_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountWithYesSelectedForNewsletter_Test()[pri:4, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountWithYesSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountWithNoSelectedForNewsletter_Test()[pri:5, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountWithNoSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyForgotPasswordLink_Test()[pri:6, instance:tests.LoginTest@4e858e0a]" name="verifyForgotPasswordLink_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyDiffWaysNavigatingToRegisterAccount_Test()[pri:6, instance:tests.RegisterTest@625abb97]" name="verifyDiffWaysNavigatingToRegisterAccount_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPlaceholdersOnLoginPage_Test()[pri:7, instance:tests.LoginTest@4e858e0a]" name="verifyPlaceholdersOnLoginPage_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithDifferentPassAndConfirmPass_Test()[pri:7, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigationBackAfterSuccessfulLogin_Test()[pri:8, instance:tests.LoginTest@4e858e0a]" name="verifyNavigationBackAfterSuccessfulLogin_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithExistingDetails_Test()[pri:8, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringWithExistingDetails_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigationBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@4e858e0a]" name="verifyNavigationBackAfterLogout_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyInvalidEmailTooltipMsgs_Test()[pri:9, instance:tests.RegisterTest@625abb97]" name="verifyInvalidEmailTooltipMsgs_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyMaxLoginAttempts_Test()[pri:11, instance:tests.LoginTest@4e858e0a]" name="verifyMaxLoginAttempts_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisterPagePlaceholders_Test()[pri:11, instance:tests.RegisterTest@625abb97]" name="verifyRegisterPagePlaceholders_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordFieldToggleToHide_Test()[pri:12, instance:tests.LoginTest@4e858e0a]" name="verifyPasswordFieldToggleToHide_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyAsterickSymbolForMandatoryFields_Test()[pri:12, instance:tests.RegisterTest@625abb97]" name="verifyAsterickSymbolForMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordCannotBeCopied_Test()[pri:13, instance:tests.LoginTest@4e858e0a]" name="verifyPasswordCannotBeCopied_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" name="verifyPasswordFieldFollowsComplexityStandards" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordNotVisibleInPageSource_Test()[pri:14, instance:tests.LoginTest@4e858e0a]" name="verifyPasswordNotVisibleInPageSource_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyPrivacyPolicyCheckboxNotCheckedByDefault()[pri:14, instance:tests.RegisterTest@625abb97]" name="verifyPrivacyPolicyCheckboxNotCheckedByDefault" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoginAfterChangingPassword_Test()[pri:15, instance:tests.LoginTest@4e858e0a]" name="verifyLoginAfterChangingPassword_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegistrationWithoutSelectingPrivacyPolicy()[pri:15, instance:tests.RegisterTest@625abb97]" name="verifyRegistrationWithoutSelectingPrivacyPolicy" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyPasswordAndConfirmPasswordAreHidden()[pri:16, instance:tests.RegisterTest@625abb97]" name="verifyPasswordAndConfirmPasswordAreHidden" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegistrationWithoutConfirmPasswordInput_Test()[pri:17, instance:tests.RegisterTest@625abb97]" name="verifyRegistrationWithoutConfirmPasswordInput_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyConfirmationEmailSentForSuccessfulRegistration()[pri:18, instance:tests.RegisterTest@625abb97]" name="verifyConfirmationEmailSentForSuccessfulRegistration" class="tests.RegisterTest"/>
      </group> <!-- Master -->
      <group name="test">
        <method signature="LoginTest.verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithValidCredentials_Test" class="tests.LoginTest"/>
      </group> <!-- test -->
      <group name="DataDriven">
        <method signature="LoginTest.verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithValidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LoginTest.verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithInvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" name="verifyPasswordFieldFollowsComplexityStandards" class="tests.RegisterTest"/>
      </group> <!-- DataDriven -->
      <group name="Regression">
        <method signature="LoginTest.verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithValidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifyLogoutFromMainMenuDropdown_Test()[pri:1, instance:tests.LogoutTest@5b1f29fa]" name="verifyLogoutFromMainMenuDropdown_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountUsingMandatoryFields_Test()[pri:1, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountUsingMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" name="verifyLoginWithInvalidCredentials_Test" class="tests.LoginTest"/>
        <method signature="LogoutTest.verifyLogoutFromRightColumnOption_Test()[pri:2, instance:tests.LogoutTest@5b1f29fa]" name="verifyLogoutFromRightColumnOption_Test" class="tests.LogoutTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountUsingNonMandatoryFields_Test()[pri:2, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountUsingNonMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountWithoutAnyDetails_Test()[pri:3, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountWithoutAnyDetails_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountWithYesSelectedForNewsletter_Test()[pri:4, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountWithYesSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegisteringAccountWithNoSelectedForNewsletter_Test()[pri:5, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringAccountWithNoSelectedForNewsletter_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyForgotPasswordLink_Test()[pri:6, instance:tests.LoginTest@4e858e0a]" name="verifyForgotPasswordLink_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyDiffWaysNavigatingToRegisterAccount_Test()[pri:6, instance:tests.RegisterTest@625abb97]" name="verifyDiffWaysNavigatingToRegisterAccount_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPlaceholdersOnLoginPage_Test()[pri:7, instance:tests.LoginTest@4e858e0a]" name="verifyPlaceholdersOnLoginPage_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithDifferentPassAndConfirmPass_Test()[pri:7, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigationBackAfterSuccessfulLogin_Test()[pri:8, instance:tests.LoginTest@4e858e0a]" name="verifyNavigationBackAfterSuccessfulLogin_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisteringWithExistingDetails_Test()[pri:8, instance:tests.RegisterTest@625abb97]" name="verifyRegisteringWithExistingDetails_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyNavigationBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@4e858e0a]" name="verifyNavigationBackAfterLogout_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyInvalidEmailTooltipMsgs_Test()[pri:9, instance:tests.RegisterTest@625abb97]" name="verifyInvalidEmailTooltipMsgs_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyMaxLoginAttempts_Test()[pri:11, instance:tests.LoginTest@4e858e0a]" name="verifyMaxLoginAttempts_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegisterPagePlaceholders_Test()[pri:11, instance:tests.RegisterTest@625abb97]" name="verifyRegisterPagePlaceholders_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordFieldToggleToHide_Test()[pri:12, instance:tests.LoginTest@4e858e0a]" name="verifyPasswordFieldToggleToHide_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyAsterickSymbolForMandatoryFields_Test()[pri:12, instance:tests.RegisterTest@625abb97]" name="verifyAsterickSymbolForMandatoryFields_Test" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordCannotBeCopied_Test()[pri:13, instance:tests.LoginTest@4e858e0a]" name="verifyPasswordCannotBeCopied_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" name="verifyPasswordFieldFollowsComplexityStandards" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyPasswordNotVisibleInPageSource_Test()[pri:14, instance:tests.LoginTest@4e858e0a]" name="verifyPasswordNotVisibleInPageSource_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyPrivacyPolicyCheckboxNotCheckedByDefault()[pri:14, instance:tests.RegisterTest@625abb97]" name="verifyPrivacyPolicyCheckboxNotCheckedByDefault" class="tests.RegisterTest"/>
        <method signature="LoginTest.verifyLoginAfterChangingPassword_Test()[pri:15, instance:tests.LoginTest@4e858e0a]" name="verifyLoginAfterChangingPassword_Test" class="tests.LoginTest"/>
        <method signature="RegisterTest.verifyRegistrationWithoutSelectingPrivacyPolicy()[pri:15, instance:tests.RegisterTest@625abb97]" name="verifyRegistrationWithoutSelectingPrivacyPolicy" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyPasswordAndConfirmPasswordAreHidden()[pri:16, instance:tests.RegisterTest@625abb97]" name="verifyPasswordAndConfirmPasswordAreHidden" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyRegistrationWithoutConfirmPasswordInput_Test()[pri:17, instance:tests.RegisterTest@625abb97]" name="verifyRegistrationWithoutConfirmPasswordInput_Test" class="tests.RegisterTest"/>
        <method signature="RegisterTest.verifyConfirmationEmailSentForSuccessfulRegistration()[pri:18, instance:tests.RegisterTest@625abb97]" name="verifyConfirmationEmailSentForSuccessfulRegistration" class="tests.RegisterTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2024-11-06T00:54:46 EST" name="Test" finished-at="2024-11-06T01:04:06 EST" duration-ms="559898">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:54:47 EST" name="setUp" finished-at="2024-11-06T00:54:52 EST" duration-ms="4836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:54:52 EST" name="verifyLoginWithValidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-06T00:54:54 EST" duration-ms="2552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Admin Login, Username=vishnu.71881@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:54:54 EST" name="tearDown" finished-at="2024-11-06T00:54:56 EST" duration-ms="1200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:54:56 EST" name="setUp" finished-at="2024-11-06T00:55:02 EST" duration-ms="6243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:02 EST" name="verifyLoginWithValidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-06T00:55:06 EST" duration-ms="3916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Supervisor Login, Username=vishnu.71882@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:06 EST" name="tearDown" finished-at="2024-11-06T00:55:07 EST" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:07 EST" name="setUp" finished-at="2024-11-06T00:55:12 EST" duration-ms="4529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:12 EST" name="verifyLoginWithValidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-06T00:55:14 EST" duration-ms="2102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Team Member Login, Username=vishnu.71883@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:14 EST" name="tearDown" finished-at="2024-11-06T00:55:15 EST" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:15 EST" name="setUp" finished-at="2024-11-06T00:55:20 EST" duration-ms="4728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials_Test(java.util.HashMap)[pri:1, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:20 EST" name="verifyLoginWithValidCredentials_Test" data-provider="ValidloginDataSupplier" finished-at="2024-11-06T00:55:22 EST" duration-ms="2703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Trainee Login, Username=vishnu.71884@gmail.com, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:22 EST" name="tearDown" finished-at="2024-11-06T00:55:23 EST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:23 EST" name="setUp" finished-at="2024-11-06T00:55:28 EST" duration-ms="4888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:28 EST" name="verifyLoginWithInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-06T00:55:30 EST" duration-ms="2085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=Both Email &Pass In-Valid , Username=vishnu.1123@gmail, Expected Result=Success, Password=Vish}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:30 EST" name="tearDown" finished-at="2024-11-06T00:55:32 EST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:32 EST" name="setUp" finished-at="2024-11-06T00:55:36 EST" duration-ms="4620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:36 EST" name="verifyLoginWithInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-06T00:55:38 EST" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=InvalidEmail & ValidPass, Username=vishnu.1123@gmail, Expected Result=Success, Password=Vishnu123}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:38 EST" name="tearDown" finished-at="2024-11-06T00:55:39 EST" duration-ms="1237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:39 EST" name="setUp" finished-at="2024-11-06T00:55:44 EST" duration-ms="4671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:44 EST" name="verifyLoginWithInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-06T00:55:45 EST" duration-ms="1598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=ValidEmail & InvalidPass, Username=vishnu.71883@gmail.com, Expected Result=Success, Password=Vishnu12}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:45 EST" name="tearDown" finished-at="2024-11-06T00:55:47 EST" duration-ms="1197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:47 EST" name="setUp" finished-at="2024-11-06T00:55:51 EST" duration-ms="4818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredentials_Test(java.util.HashMap)[pri:2, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:51 EST" name="verifyLoginWithInvalidCredentials_Test" data-provider="InvalidloginDataSupplier" finished-at="2024-11-06T00:55:54 EST" duration-ms="2320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Runmode=Y, Description=NoCredentilals, Username= , Expected Result=Success, Password= }]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:54 EST" name="tearDown" finished-at="2024-11-06T00:55:55 EST" duration-ms="1122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:55 EST" name="setUp" finished-at="2024-11-06T00:55:59 EST" duration-ms="4573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyForgotPasswordLink_Test()[pri:6, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:55:59 EST" name="verifyForgotPasswordLink_Test" finished-at="2024-11-06T00:56:00 EST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordLink_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:00 EST" name="tearDown" finished-at="2024-11-06T00:56:01 EST" duration-ms="1178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:01 EST" name="setUp" finished-at="2024-11-06T00:56:06 EST" duration-ms="4661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPlaceholdersOnLoginPage_Test()[pri:7, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:06 EST" name="verifyPlaceholdersOnLoginPage_Test" finished-at="2024-11-06T00:56:06 EST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPlaceholdersOnLoginPage_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:06 EST" name="tearDown" finished-at="2024-11-06T00:56:07 EST" duration-ms="1179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:07 EST" name="setUp" finished-at="2024-11-06T00:56:12 EST" duration-ms="5051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyNavigationBackAfterSuccessfulLogin_Test()[pri:8, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:12 EST" name="verifyNavigationBackAfterSuccessfulLogin_Test" finished-at="2024-11-06T00:56:25 EST" duration-ms="12515" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a267e75517bdc5a865b28c763bd1d51b, findElement {value=(//a[text()='Logout'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63643}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63643/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a267e75517bdc5a865b28c763bd1d51b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a267e75517bdc5a865b28c763bd1d51b, findElement {value=(//a[text()='Logout'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63643}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63643/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a267e75517bdc5a865b28c763bd1d51b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$lpIVrb0n.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy51.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigationBackAfterSuccessfulLogin_Test(LoginTest.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigationBackAfterSuccessfulLogin_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:25 EST" name="tearDown" finished-at="2024-11-06T00:56:26 EST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:26 EST" name="setUp" finished-at="2024-11-06T00:56:30 EST" duration-ms="4337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNavigationBackAfterSuccessfulLogin_Test()[pri:8, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:30 EST" name="verifyNavigationBackAfterSuccessfulLogin_Test" finished-at="2024-11-06T00:56:42 EST" duration-ms="12148" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a7d3ddb521e1fc47391022d08851b687, findElement {value=(//a[text()='Logout'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63679}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63679/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a7d3ddb521e1fc47391022d08851b687]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Logout'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a7d3ddb521e1fc47391022d08851b687, findElement {value=(//a[text()='Logout'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63679}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63679/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a7d3ddb521e1fc47391022d08851b687
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$F52xAiHg.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy51.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigationBackAfterSuccessfulLogin_Test(LoginTest.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigationBackAfterSuccessfulLogin_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:43 EST" name="tearDown" finished-at="2024-11-06T00:56:44 EST" duration-ms="1189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:44 EST" name="setUp" finished-at="2024-11-06T00:56:48 EST" duration-ms="4411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyNavigationBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:56:48 EST" name="verifyNavigationBackAfterLogout_Test" finished-at="2024-11-06T00:57:01 EST" duration-ms="12802" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [3cdc8095eddf13d7b8f99cf646d8da8f, findElement {value=(//a[text()='Login'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63713}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63713/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3cdc8095eddf13d7b8f99cf646d8da8f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [3cdc8095eddf13d7b8f99cf646d8da8f, findElement {value=(//a[text()='Login'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63713}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63713/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3cdc8095eddf13d7b8f99cf646d8da8f
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$KqsqESVO.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy51.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigationBackAfterLogout_Test(LoginTest.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigationBackAfterLogout_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:01 EST" name="tearDown" finished-at="2024-11-06T00:57:02 EST" duration-ms="1169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:02 EST" name="setUp" finished-at="2024-11-06T00:57:06 EST" duration-ms="4286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNavigationBackAfterLogout_Test()[pri:9, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:06 EST" name="verifyNavigationBackAfterLogout_Test" finished-at="2024-11-06T00:57:19 EST" duration-ms="12692" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [512d7e67b45608f948e276638ae5ccee, findElement {value=(//a[text()='Login'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63746}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63746/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 512d7e67b45608f948e276638ae5ccee]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[text()='Login'])[1]"}
  (Session info: MicrosoftEdge=130.0.2849.68)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [512d7e67b45608f948e276638ae5ccee, findElement {value=(//a[text()='Login'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 130.0.2849.68, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:63746}, msedge: {msedgedriverVersion: 130.0.2849.68 (ef504a70102b..., userDataDir: C:\Users\Vishnu\AppData\Loc...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63746/devtoo..., se:cdpVersion: 130.0.2849.68, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 512d7e67b45608f948e276638ae5ccee
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:249)
at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48)
at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$2(WebDriverDecorator.java:321)
at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$q0DhctrU.findElement(Unknown Source)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy51.isDisplayed(Unknown Source)
at tests.LoginTest.verifyNavigationBackAfterLogout_Test(LoginTest.java:68)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigationBackAfterLogout_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:19 EST" name="tearDown" finished-at="2024-11-06T00:57:20 EST" duration-ms="1192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:20 EST" name="setUp" finished-at="2024-11-06T00:57:25 EST" duration-ms="4914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyMaxLoginAttempts_Test()[pri:11, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:25 EST" name="verifyMaxLoginAttempts_Test" finished-at="2024-11-06T00:57:30 EST" duration-ms="4569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMaxLoginAttempts_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:30 EST" name="tearDown" finished-at="2024-11-06T00:57:31 EST" duration-ms="1165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:31 EST" name="setUp" finished-at="2024-11-06T00:57:36 EST" duration-ms="4781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldToggleToHide_Test()[pri:12, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:36 EST" name="verifyPasswordFieldToggleToHide_Test" finished-at="2024-11-06T00:57:36 EST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldToggleToHide_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:36 EST" name="tearDown" finished-at="2024-11-06T00:57:37 EST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:37 EST" name="setUp" finished-at="2024-11-06T00:57:42 EST" duration-ms="4563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordCannotBeCopied_Test()[pri:13, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:42 EST" name="verifyPasswordCannotBeCopied_Test" finished-at="2024-11-06T00:57:42 EST" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordCannotBeCopied_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:42 EST" name="tearDown" finished-at="2024-11-06T00:57:44 EST" duration-ms="1215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:44 EST" name="setUp" finished-at="2024-11-06T00:57:48 EST" duration-ms="4535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordNotVisibleInPageSource_Test()[pri:14, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:48 EST" name="verifyPasswordNotVisibleInPageSource_Test" finished-at="2024-11-06T00:57:48 EST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordNotVisibleInPageSource_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:48 EST" name="tearDown" finished-at="2024-11-06T00:57:50 EST" duration-ms="1193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:50 EST" name="setUp" finished-at="2024-11-06T00:57:54 EST" duration-ms="4773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginAfterChangingPassword_Test()[pri:15, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:57:54 EST" name="verifyLoginAfterChangingPassword_Test" finished-at="2024-11-06T00:58:06 EST" duration-ms="11263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginAfterChangingPassword_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@4e858e0a]" started-at="2024-11-06T00:58:06 EST" name="tearDown" finished-at="2024-11-06T00:58:07 EST" duration-ms="1205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RegisterTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:07 EST" name="setUp" finished-at="2024-11-06T00:58:12 EST" duration-ms="4933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountUsingMandatoryFields_Test()[pri:1, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:12 EST" name="verifyRegisteringAccountUsingMandatoryFields_Test" finished-at="2024-11-06T00:58:14 EST" duration-ms="2589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountUsingMandatoryFields_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:14 EST" name="tearDown" finished-at="2024-11-06T00:58:15 EST" duration-ms="1129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:15 EST" name="setUp" finished-at="2024-11-06T00:58:20 EST" duration-ms="4815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountUsingNonMandatoryFields_Test()[pri:2, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:20 EST" name="verifyRegisteringAccountUsingNonMandatoryFields_Test" finished-at="2024-11-06T00:58:23 EST" duration-ms="2573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountUsingNonMandatoryFields_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:23 EST" name="tearDown" finished-at="2024-11-06T00:58:24 EST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:24 EST" name="setUp" finished-at="2024-11-06T00:58:29 EST" duration-ms="5072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountWithoutAnyDetails_Test()[pri:3, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:29 EST" name="verifyRegisteringAccountWithoutAnyDetails_Test" finished-at="2024-11-06T00:58:31 EST" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithoutAnyDetails_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:31 EST" name="tearDown" finished-at="2024-11-06T00:58:32 EST" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:32 EST" name="setUp" finished-at="2024-11-06T00:58:37 EST" duration-ms="4735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountWithYesSelectedForNewsletter_Test()[pri:4, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:37 EST" name="verifyRegisteringAccountWithYesSelectedForNewsletter_Test" finished-at="2024-11-06T00:58:40 EST" duration-ms="2919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithYesSelectedForNewsletter_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:40 EST" name="tearDown" finished-at="2024-11-06T00:58:41 EST" duration-ms="1133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:41 EST" name="setUp" finished-at="2024-11-06T00:58:46 EST" duration-ms="5281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringAccountWithNoSelectedForNewsletter_Test()[pri:5, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:46 EST" name="verifyRegisteringAccountWithNoSelectedForNewsletter_Test" finished-at="2024-11-06T00:58:49 EST" duration-ms="2598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithNoSelectedForNewsletter_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:49 EST" name="tearDown" finished-at="2024-11-06T00:58:50 EST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:50 EST" name="setUp" finished-at="2024-11-06T00:58:55 EST" duration-ms="4924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDiffWaysNavigatingToRegisterAccount_Test()[pri:6, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:55 EST" name="verifyDiffWaysNavigatingToRegisterAccount_Test" finished-at="2024-11-06T00:58:56 EST" duration-ms="1490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDiffWaysNavigatingToRegisterAccount_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:56 EST" name="tearDown" finished-at="2024-11-06T00:58:58 EST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:58:58 EST" name="setUp" finished-at="2024-11-06T00:59:02 EST" duration-ms="4694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringWithDifferentPassAndConfirmPass_Test()[pri:7, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:02 EST" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" finished-at="2024-11-06T00:59:05 EST" duration-ms="2464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringWithDifferentPassAndConfirmPass_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:05 EST" name="tearDown" finished-at="2024-11-06T00:59:06 EST" duration-ms="1127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:06 EST" name="setUp" finished-at="2024-11-06T00:59:11 EST" duration-ms="4760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisteringWithExistingDetails_Test()[pri:8, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:11 EST" name="verifyRegisteringWithExistingDetails_Test" finished-at="2024-11-06T00:59:13 EST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringWithExistingDetails_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:13 EST" name="tearDown" finished-at="2024-11-06T00:59:14 EST" duration-ms="1172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:14 EST" name="setUp" finished-at="2024-11-06T00:59:19 EST" duration-ms="5256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyInvalidEmailTooltipMsgs_Test()[pri:9, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:19 EST" name="verifyInvalidEmailTooltipMsgs_Test" finished-at="2024-11-06T00:59:21 EST" duration-ms="1492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyInvalidEmailTooltipMsgs_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:21 EST" name="tearDown" finished-at="2024-11-06T00:59:22 EST" duration-ms="1163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:22 EST" name="setUp" finished-at="2024-11-06T00:59:27 EST" duration-ms="4758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:27 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T00:59:29 EST" duration-ms="2507" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Nine Digits, Telephone=1.23456789E8, FirstName=Abhi, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Abhi, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:29 EST" name="tearDown" finished-at="2024-11-06T00:59:31 EST" duration-ms="1151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:31 EST" name="setUp" finished-at="2024-11-06T00:59:36 EST" duration-ms="5259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:36 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T00:59:38 EST" duration-ms="2457" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Nine Digits, Telephone=1.23456789E8, FirstName=Abhi, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Abhi, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:38 EST" name="tearDown" finished-at="2024-11-06T00:59:40 EST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:40 EST" name="setUp" finished-at="2024-11-06T00:59:45 EST" duration-ms="5252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:45 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T00:59:47 EST" duration-ms="2451" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Eleven Digits, Telephone=1.2345678901E10, FirstName=Trevor, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Tre, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:47 EST" name="tearDown" finished-at="2024-11-06T00:59:48 EST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:48 EST" name="setUp" finished-at="2024-11-06T00:59:53 EST" duration-ms="4809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:53 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T00:59:56 EST" duration-ms="2540" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::  Eleven Digits, Telephone=1.2345678901E10, FirstName=Trevor, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Tre, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:56 EST" name="tearDown" finished-at="2024-11-06T00:59:57 EST" duration-ms="1167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T00:59:57 EST" name="setUp" finished-at="2024-11-06T01:00:02 EST" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:02 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T01:00:05 EST" duration-ms="3353" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered :: Non Numeric, Telephone=abcdefghij, FirstName=Pawan, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Paw, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:05 EST" name="tearDown" finished-at="2024-11-06T01:00:07 EST" duration-ms="1168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:07 EST" name="setUp" finished-at="2024-11-06T01:00:11 EST" duration-ms="4655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:11 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T01:00:14 EST" duration-ms="2354" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered :: Non Numeric, Telephone=abcdefghij, FirstName=Pawan, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Paw, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:14 EST" name="tearDown" finished-at="2024-11-06T01:00:15 EST" duration-ms="1139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:15 EST" name="setUp" finished-at="2024-11-06T01:00:20 EST" duration-ms="5411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:20 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T01:00:23 EST" duration-ms="2565" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::   All Special Characters, Telephone=!@#$%^&*(), FirstName=Rahul, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Rah, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:23 EST" name="tearDown" finished-at="2024-11-06T01:00:24 EST" duration-ms="1145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:24 EST" name="setUp" finished-at="2024-11-06T01:00:29 EST" duration-ms="4716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:29 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T01:00:31 EST" duration-ms="2370" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=Phone Text Entered ::   All Special Characters, Telephone=!@#$%^&*(), FirstName=Rahul, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Rah, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:31 EST" name="tearDown" finished-at="2024-11-06T01:00:32 EST" duration-ms="1128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:32 EST" name="setUp" finished-at="2024-11-06T01:00:37 EST" duration-ms="4781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:37 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T01:00:40 EST" duration-ms="2468" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description= Phone Text Entered :: With Spaces, Telephone=1234 67 90, FirstName=Cohen, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Coh, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:40 EST" name="tearDown" finished-at="2024-11-06T01:00:41 EST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:41 EST" name="setUp" finished-at="2024-11-06T01:00:45 EST" duration-ms="4658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(java.util.HashMap)[pri:10, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:45 EST" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" data-provider="invalidPhoneNumbersDataSupplier" finished-at="2024-11-06T01:00:48 EST" duration-ms="2840" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description= Phone Text Entered :: With Spaces, Telephone=1234 67 90, FirstName=Cohen, PasswordConfirm=Valid1Password!, Runmode=Y, LastName=Coh, Password=Valid1Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyUserCannotUseInvalidPhoneNumberForRegistration_Test(RegisterTest.java:170)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:48 EST" name="tearDown" finished-at="2024-11-06T01:00:50 EST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:50 EST" name="setUp" finished-at="2024-11-06T01:00:55 EST" duration-ms="5312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegisterPagePlaceholders_Test()[pri:11, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:55 EST" name="verifyRegisterPagePlaceholders_Test" finished-at="2024-11-06T01:00:55 EST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterPagePlaceholders_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:55 EST" name="tearDown" finished-at="2024-11-06T01:00:56 EST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:00:56 EST" name="setUp" finished-at="2024-11-06T01:01:01 EST" duration-ms="4994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAsterickSymbolForMandatoryFields_Test()[pri:12, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:01 EST" name="verifyAsterickSymbolForMandatoryFields_Test" finished-at="2024-11-06T01:01:02 EST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAsterickSymbolForMandatoryFields_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:02 EST" name="tearDown" finished-at="2024-11-06T01:01:03 EST" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:03 EST" name="setUp" finished-at="2024-11-06T01:01:08 EST" duration-ms="5483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:08 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:01:11 EST" duration-ms="2420" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Uppercase, Telephone=1.23456789E9, FirstName=Abhi, PasswordConfirm=password123!, Runmode=Y, LastName=Abhi, Password=password123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:11 EST" name="tearDown" finished-at="2024-11-06T01:01:12 EST" duration-ms="1146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:12 EST" name="setUp" finished-at="2024-11-06T01:01:17 EST" duration-ms="5354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:17 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:01:20 EST" duration-ms="2443" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Uppercase, Telephone=1.23456789E9, FirstName=Abhi, PasswordConfirm=password123!, Runmode=Y, LastName=Abhi, Password=password123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:20 EST" name="tearDown" finished-at="2024-11-06T01:01:21 EST" duration-ms="1180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:21 EST" name="setUp" finished-at="2024-11-06T01:01:26 EST" duration-ms="4649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:26 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:01:28 EST" duration-ms="2711" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Lowercase, Telephone=1.23456789E9, FirstName=Trevor, PasswordConfirm=PASSWORD123!, Runmode=Y, LastName=Tre, Password=PASSWORD123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:28 EST" name="tearDown" finished-at="2024-11-06T01:01:29 EST" duration-ms="1139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:29 EST" name="setUp" finished-at="2024-11-06T01:01:34 EST" duration-ms="4838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:34 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:01:37 EST" duration-ms="2487" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Lowercase, Telephone=1.23456789E9, FirstName=Trevor, PasswordConfirm=PASSWORD123!, Runmode=Y, LastName=Tre, Password=PASSWORD123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:37 EST" name="tearDown" finished-at="2024-11-06T01:01:38 EST" duration-ms="1117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:38 EST" name="setUp" finished-at="2024-11-06T01:01:43 EST" duration-ms="4645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:43 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:01:45 EST" duration-ms="2467" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Numbers, Telephone=1.23456789E9, FirstName=Pawan, PasswordConfirm=1.23456789E9, Runmode=Y, LastName=Paw, Password=1.23456789E9}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:45 EST" name="tearDown" finished-at="2024-11-06T01:01:46 EST" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:46 EST" name="setUp" finished-at="2024-11-06T01:01:51 EST" duration-ms="4702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:51 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:01:54 EST" duration-ms="2581" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Numbers, Telephone=1.23456789E9, FirstName=Pawan, PasswordConfirm=1.23456789E9, Runmode=Y, LastName=Paw, Password=1.23456789E9}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:54 EST" name="tearDown" finished-at="2024-11-06T01:01:55 EST" duration-ms="1111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:01:55 EST" name="setUp" finished-at="2024-11-06T01:02:00 EST" duration-ms="5021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:00 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:02 EST" duration-ms="2469" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Numbers, Telephone=1.23456789E9, FirstName=Rahul, PasswordConfirm=Password!, Runmode=Y, LastName=Rah, Password=Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:02 EST" name="tearDown" finished-at="2024-11-06T01:02:04 EST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:04 EST" name="setUp" finished-at="2024-11-06T01:02:08 EST" duration-ms="4615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:08 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:11 EST" duration-ms="2455" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Numbers, Telephone=1.23456789E9, FirstName=Rahul, PasswordConfirm=Password!, Runmode=Y, LastName=Rah, Password=Password!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:11 EST" name="tearDown" finished-at="2024-11-06T01:02:12 EST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:12 EST" name="setUp" finished-at="2024-11-06T01:02:17 EST" duration-ms="5007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:17 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:20 EST" duration-ms="2675" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Special Characters, Telephone=1.23456789E9, FirstName=Shyam, PasswordConfirm=^$^*^$*^*$, Runmode=Y, LastName=Shy, Password=^$^*^$*^*$}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:20 EST" name="tearDown" finished-at="2024-11-06T01:02:21 EST" duration-ms="1111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:21 EST" name="setUp" finished-at="2024-11-06T01:02:26 EST" duration-ms="4898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:26 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:28 EST" duration-ms="2804" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  All Special Characters, Telephone=1.23456789E9, FirstName=Shyam, PasswordConfirm=^$^*^$*^*$, Runmode=Y, LastName=Shy, Password=^$^*^$*^*$}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:28 EST" name="tearDown" finished-at="2024-11-06T01:02:30 EST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:30 EST" name="setUp" finished-at="2024-11-06T01:02:34 EST" duration-ms="4713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:34 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:37 EST" duration-ms="2777" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Special Characters, Telephone=1.23456789E9, FirstName=Cohen, PasswordConfirm=Password123, Runmode=Y, LastName=Coh, Password=Password123}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:37 EST" name="tearDown" finished-at="2024-11-06T01:02:38 EST" duration-ms="1175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:38 EST" name="setUp" finished-at="2024-11-06T01:02:43 EST" duration-ms="4843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:43 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:45 EST" duration-ms="2340" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  No Special Characters, Telephone=1.23456789E9, FirstName=Cohen, PasswordConfirm=Password123, Runmode=Y, LastName=Coh, Password=Password123}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:46 EST" name="tearDown" finished-at="2024-11-06T01:02:47 EST" duration-ms="1155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:47 EST" name="setUp" finished-at="2024-11-06T01:02:52 EST" duration-ms="5016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:52 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:02:55 EST" duration-ms="3091" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  With Spaces, Telephone=1.23456789E9, FirstName=Lawren, PasswordConfirm=Pass word 123!, Runmode=Y, LastName=Law, Password=Pass word 123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:55 EST" name="tearDown" finished-at="2024-11-06T01:02:56 EST" duration-ms="1202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:02:56 EST" name="setUp" finished-at="2024-11-06T01:03:01 EST" duration-ms="4860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordFieldFollowsComplexityStandards(java.util.HashMap)[pri:13, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:01 EST" name="verifyPasswordFieldFollowsComplexityStandards" data-provider="PwdComplexityDataSupplier" finished-at="2024-11-06T01:03:03 EST" duration-ms="2521" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=autogenerate, ExpectedResult=Success, Description=PWD Entered ::  With Spaces, Telephone=1.23456789E9, FirstName=Lawren, PasswordConfirm=Pass word 123!, Runmode=Y, LastName=Law, Password=Pass word 123!}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Your Account Has Been Created!] but found [Your Account Has Been Created!]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1582)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2201)
at org.testng.Assert.assertNotEquals(Assert.java:2223)
at tests.RegisterTest.verifyPasswordFieldFollowsComplexityStandards(RegisterTest.java:208)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordFieldFollowsComplexityStandards -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:04 EST" name="tearDown" finished-at="2024-11-06T01:03:05 EST" duration-ms="1169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:05 EST" name="setUp" finished-at="2024-11-06T01:03:10 EST" duration-ms="5504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPrivacyPolicyCheckboxNotCheckedByDefault()[pri:14, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:10 EST" name="verifyPrivacyPolicyCheckboxNotCheckedByDefault" finished-at="2024-11-06T01:03:10 EST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrivacyPolicyCheckboxNotCheckedByDefault -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:10 EST" name="tearDown" finished-at="2024-11-06T01:03:11 EST" duration-ms="1168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:11 EST" name="setUp" finished-at="2024-11-06T01:03:16 EST" duration-ms="4751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationWithoutSelectingPrivacyPolicy()[pri:15, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:16 EST" name="verifyRegistrationWithoutSelectingPrivacyPolicy" finished-at="2024-11-06T01:03:18 EST" duration-ms="2195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationWithoutSelectingPrivacyPolicy -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:18 EST" name="tearDown" finished-at="2024-11-06T01:03:20 EST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:20 EST" name="setUp" finished-at="2024-11-06T01:03:25 EST" duration-ms="5621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyPasswordAndConfirmPasswordAreHidden()[pri:16, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:25 EST" name="verifyPasswordAndConfirmPasswordAreHidden" finished-at="2024-11-06T01:03:26 EST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordAndConfirmPasswordAreHidden -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:26 EST" name="tearDown" finished-at="2024-11-06T01:03:27 EST" duration-ms="1193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:27 EST" name="setUp" finished-at="2024-11-06T01:03:32 EST" duration-ms="4815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationWithoutConfirmPasswordInput_Test()[pri:17, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:32 EST" name="verifyRegistrationWithoutConfirmPasswordInput_Test" finished-at="2024-11-06T01:03:34 EST" duration-ms="2178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationWithoutConfirmPasswordInput_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:34 EST" name="tearDown" finished-at="2024-11-06T01:03:35 EST" duration-ms="1145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:35 EST" name="setUp" finished-at="2024-11-06T01:03:40 EST" duration-ms="4663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="verifyConfirmationEmailSentForSuccessfulRegistration()[pri:18, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:40 EST" name="verifyConfirmationEmailSentForSuccessfulRegistration" finished-at="2024-11-06T01:03:40 EST" duration-ms="2" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[All mandatory fields must be provided.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: All mandatory fields must be provided.
at pagesobjects.RegisterPage.registerAnAccount(RegisterPage.java:173)
at tests.RegisterTest.verifyConfirmationEmailSentForSuccessfulRegistration(RegisterTest.java:254)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyConfirmationEmailSentForSuccessfulRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:40 EST" name="tearDown" finished-at="2024-11-06T01:03:41 EST" duration-ms="1203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:41 EST" name="setUp" finished-at="2024-11-06T01:03:46 EST" duration-ms="4780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyConfirmationEmailSentForSuccessfulRegistration()[pri:18, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:46 EST" name="verifyConfirmationEmailSentForSuccessfulRegistration" finished-at="2024-11-06T01:03:46 EST" duration-ms="1" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[All mandatory fields must be provided.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: All mandatory fields must be provided.
at pagesobjects.RegisterPage.registerAnAccount(RegisterPage.java:173)
at tests.RegisterTest.verifyConfirmationEmailSentForSuccessfulRegistration(RegisterTest.java:254)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyConfirmationEmailSentForSuccessfulRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterTest@625abb97]" started-at="2024-11-06T01:03:46 EST" name="tearDown" finished-at="2024-11-06T01:03:47 EST" duration-ms="1180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterTest -->
      <class name="tests.LogoutTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LogoutTest@5b1f29fa]" started-at="2024-11-06T01:03:47 EST" name="setUp" finished-at="2024-11-06T01:03:54 EST" duration-ms="7156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFromMainMenuDropdown_Test()[pri:1, instance:tests.LogoutTest@5b1f29fa]" started-at="2024-11-06T01:03:54 EST" name="verifyLogoutFromMainMenuDropdown_Test" finished-at="2024-11-06T01:03:55 EST" duration-ms="854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFromMainMenuDropdown_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogoutTest@5b1f29fa]" started-at="2024-11-06T01:03:55 EST" name="tearDown" finished-at="2024-11-06T01:03:56 EST" duration-ms="1183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LogoutTest@5b1f29fa]" started-at="2024-11-06T01:03:56 EST" name="setUp" finished-at="2024-11-06T01:04:04 EST" duration-ms="7936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFromRightColumnOption_Test()[pri:2, instance:tests.LogoutTest@5b1f29fa]" started-at="2024-11-06T01:04:04 EST" name="verifyLogoutFromRightColumnOption_Test" finished-at="2024-11-06T01:04:05 EST" duration-ms="973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFromRightColumnOption_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LogoutTest@5b1f29fa]" started-at="2024-11-06T01:04:05 EST" name="tearDown" finished-at="2024-11-06T01:04:06 EST" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LogoutTest -->
    </test> <!-- Test -->
  </suite> <!-- Grouping-Suite -->
</testng-results>
