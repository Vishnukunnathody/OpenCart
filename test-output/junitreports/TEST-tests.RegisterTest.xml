<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-FLAG05I" failures="0" tests="29" name="tests.RegisterTest" time="0.002" errors="1" timestamp="2024-11-06T12:19:04 EST" skipped="28">
  <testcase classname="tests.RegisterTest" name="setUp" time="0.001">
    <error message="Invalid browser name specified in properties file" type="java.lang.IllegalArgumentException">
      <![CDATA[java.lang.IllegalArgumentException: Invalid browser name specified in properties file
at utils.DriverType.getDriverType(DriverType.java:37)
at tests.BaseSteps.initialize(BaseSteps.java:54)
at tests.RegisterTest.setUp(RegisterTest.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- setUp -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringAccountUsingMandatoryFields_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingMandatoryFields_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringAccountUsingNonMandatoryFields_Test" time="0.001">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountUsingNonMandatoryFields_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringAccountWithoutAnyDetails_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithoutAnyDetails_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringAccountWithYesSelectedForNewsletter_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithYesSelectedForNewsletter_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringAccountWithNoSelectedForNewsletter_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringAccountWithNoSelectedForNewsletter_Test -->
  <testcase classname="tests.RegisterTest" name="verifyDiffWaysNavigatingToRegisterAccount_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyDiffWaysNavigatingToRegisterAccount_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringWithDifferentPassAndConfirmPass_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringWithDifferentPassAndConfirmPass_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisteringWithExistingDetails_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisteringWithExistingDetails_Test -->
  <testcase classname="tests.RegisterTest" name="verifyInvalidEmailTooltipMsgs_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyInvalidEmailTooltipMsgs_Test -->
  <testcase classname="tests.RegisterTest" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
  <testcase classname="tests.RegisterTest" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
  <testcase classname="tests.RegisterTest" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
  <testcase classname="tests.RegisterTest" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
  <testcase classname="tests.RegisterTest" name="verifyUserCannotUseInvalidPhoneNumberForRegistration_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyUserCannotUseInvalidPhoneNumberForRegistration_Test -->
  <testcase classname="tests.RegisterTest" name="verifyRegisterPagePlaceholders_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegisterPagePlaceholders_Test -->
  <testcase classname="tests.RegisterTest" name="verifyAsterickSymbolForMandatoryFields_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyAsterickSymbolForMandatoryFields_Test -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordFieldFollowsComplexityStandards" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordFieldFollowsComplexityStandards -->
  <testcase classname="tests.RegisterTest" name="verifyPrivacyPolicyCheckboxNotCheckedByDefault" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPrivacyPolicyCheckboxNotCheckedByDefault -->
  <testcase classname="tests.RegisterTest" name="verifyRegistrationWithoutSelectingPrivacyPolicy" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegistrationWithoutSelectingPrivacyPolicy -->
  <testcase classname="tests.RegisterTest" name="verifyPasswordAndConfirmPasswordAreHidden" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPasswordAndConfirmPasswordAreHidden -->
  <testcase classname="tests.RegisterTest" name="verifyRegistrationWithoutConfirmPasswordInput_Test" time="0.000">
    <skipped/>
  </testcase> <!-- verifyRegistrationWithoutConfirmPasswordInput_Test -->
  <testcase classname="tests.RegisterTest" name="verifyConfirmationEmailSentForSuccessfulRegistration" time="0.000">
    <skipped/>
  </testcase> <!-- verifyConfirmationEmailSentForSuccessfulRegistration -->
</testsuite> <!-- tests.RegisterTest -->
